{"version":3,"file":"static/js/736.2f9b7f82.chunk.js","mappings":"yNACA,EAAoC,uCAApC,EAAuF,+B,6BCsCvF,GClC4BA,EAAAA,UDCG,SAACC,GAC5B,OAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC1B,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAO,eAA3CA,EAAM,KAAEC,EAAS,MACtBC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,OACpB,GAAE,CAACJ,EAAMI,SAWT,OACI,0BACkB,IAAbF,GAEG,0BACI,kBAAOK,SARA,SAACC,GACpBH,EAAUG,EAAEC,cAAcC,MAC9B,EAMiDC,WAAW,EAAMC,OAZvC,WACvBT,GAAY,GACZH,EAAMa,aAAaT,EACvB,EAS8FM,MAAON,OAGzF,iBAAKU,cAlBQ,WACrBX,GAAY,EAChB,EAgBiD,WACjC,4CACA,0BAAQH,EAAMI,aAMlC,GECA,EA/BoB,SAAH,GAA6C,IAAxCW,EAAO,EAAPA,QAASX,EAAM,EAANA,OAAQY,EAAgB,EAAhBA,iBACnC,OAAKD,GAID,4BACI,iBAAKE,UAAWC,EAAoB,WAChC,gBAAMC,IAA8B,OAAzBJ,EAAQK,OAAOC,MAAiBC,EAAoBP,EAAQK,OAAOC,MAAOE,IAAI,aAAaN,UAAWC,KACjH,iDAAUH,EAAQS,aAClB,oEAAcT,EAAQU,YACtB,4BACI,gHAAiD,IAA3BV,EAAQW,eAAyB,eAAO,yBAC9D,iIAAyBX,EAAQY,iCAErC,4BACI,uCACA,wBACKC,OAAOC,QAAQd,EAAQe,UAAUC,KAAI,+BAAEC,EAAG,KAACtB,EAAK,aAC3CA,IAAS,yBACP,0BAAKsB,EAAG,MAAG,cAAGC,KAAMvB,EAAM,SAAEA,QADZsB,EAEf,aAKrB,0BACI,SAAC,EAAsB,CAAC5B,OAAUA,EAAQS,aAAgBG,UAxB3D,SAACkB,EAAA,EAAS,GA4BzB,E,oBCrCA,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mBCevB,EAba,SAAClC,GAEV,OACE,iBAAKiB,UAAWC,EAAO,WACrB,gBAAKC,IAAKnB,EAAMmC,WACdnC,EAAMoC,SACP,2BACEpC,EAAMqC,aACP,yCAIV,E,uCCLMC,EAAUvC,EAAAA,MAAW,SAACC,GACxB,IAAIuC,GAAgB,OAAIvC,EAAMwC,WACzBC,UACAV,KAAK,SAACW,EAAEC,GAAK,OACV,0BACI,SAAC,EAAI,CAACN,YAAaK,EAAEE,WAAYR,QAASM,EAAEN,QAASD,SAAUO,EAAEG,OADzDF,EAEN,IAId,OACA,iBAAK1B,UAAWC,EAAa,WACzB,sCACA,0BACE,SAAC4B,EAAmB,CAACC,SAPR,SAACC,GAChBhD,EAAMiD,QAAQD,EAAYE,YAC9B,OAOI,gBAAKjC,UAAWC,EAAQ,SACnBqB,MAIb,IAYMO,GAAsBK,EAAAA,EAAAA,GAAU,CAACC,KAAM,sBAAjBD,EAXL,SAACnD,GACpB,IAAMqD,GAAcC,EAAAA,EAAAA,GAAiB,IACrC,OACI,kBAAMP,SAAU/C,EAAMuD,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAYC,EAAAA,GAAUC,KAAK,cAAcC,YAAY,kBAAkBC,SAAU,CAACC,EAAAA,EAAeT,QAE5G,0BAAK,6CAGjB,IAEA,I,UCxBA,GADyBU,EAAAA,EAAAA,KAbH,SAACC,GACnB,MAAO,CACHxB,UAAWwB,EAAMC,YAAYzB,UAC7BU,YAAac,EAAMC,YAAYf,YAEvC,IACyB,SAACgB,GACtB,MAAO,CACHjB,QAAS,SAACC,GACNgB,GAASC,EAAAA,EAAAA,IAAqBjB,GAClC,EAER,GACyBa,CAA4CzB,GCPrE,EARgB,SAACtC,GACb,OACI,4BACI,SAAC,EAAW,CAACe,QAAWf,EAAMe,QAASX,OAAUJ,EAAMI,OAAQY,iBAAoBhB,EAAMoE,yBACzF,SAAC,EAAgB,MAG7B,E,8BCQA,MAfA,SAAoBC,GAahB,OAZA,SAAiCrE,GAC7B,IAAIsE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACb,OACI,SAACN,GAAS,kBACFrE,GAAK,IACT4E,OAAQ,CAAEN,SAAAA,EAAUE,SAAAA,EAAUE,OAAAA,KAG1C,CAGJ,ECTMG,EAAgB,qGAgBjB,OAhBiB,yCAElB,WACI,IAAIC,EAASC,KAAK/E,MAAM4E,OAAOF,OAAOI,OACjCA,IACDA,EAASC,KAAK/E,MAAMgF,kBAExBD,KAAK/E,MAAMiF,oBAAoBH,GAC/BC,KAAK/E,MAAMkF,mBAAmBJ,EAClC,GAAC,oBACD,WACI,OACI,0BACI,SAAC,GAAO,UAAKC,KAAK/E,SAG9B,KAAC,EAhBiB,CAASD,EAAAA,WA2B/B,GAAeoF,EAAAA,EAAAA,IACXC,EAAAA,GACArB,EAAAA,EAAAA,KAVoB,SAACC,GAAK,MAAM,CAChCjD,QAASiD,EAAMC,YAAYlD,QAC3BX,OAAQ4D,EAAMC,YAAY7D,OAC1B4E,iBAAkBhB,EAAMqB,KAAKP,OAC7BQ,OAAQtB,EAAMqB,KAAKC,OACtB,GAK4B,CAACL,oBAAAA,EAAAA,GAAoBC,mBAAAA,EAAAA,GAAmBd,sBAAAA,EAAAA,KACjEmB,EAHJ,CAICV,E,4ECpCGW,EAA6B,SAACxB,GAAK,MAAM,CACzCsB,OAAQtB,EAAMqB,KAAKC,OACtB,EAQD,IAPyB,SAACjB,GAKtB,OAAQN,EAAAA,EAAAA,IAAQyB,EAARzB,EAJkB,SAAC/D,GACvB,OAAIA,EAAMsF,QACH,SAACjB,GAAS,UAAKrE,KADG,SAAC,KAAQ,CAACyF,GAAG,UAE1C,GAEJ,C","sources":["webpack://my-app/./src/components/profile/profileinfo/ProfileInfo.module.css?5eda","components/profile/profileinfo/ProfileStatusWithHooks.jsx","components/profile/profileinfo/ProfileStatus.jsx","components/profile/profileinfo/ProfileInfo.jsx","webpack://my-app/./src/components/profile/myposts/MyPosts.module.css?960d","webpack://my-app/./src/components/profile/myposts/post/Post.module.css?8492","components/profile/myposts/post/Post.jsx","components/profile/myposts/MyPosts.jsx","components/profile/myposts/MyPostsContainer.jsx","components/profile/Profile.jsx","utils/oldHOC/withRouter.js","components/profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"description_block\":\"ProfileInfo_description_block__M4B4k\",\"userPhoto\":\"ProfileInfo_userPhoto__fJP7H\"};","import React, {useEffect, useState} from \"react\"\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {editMode === true\r\n                ?\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n                :\r\n                <div onDoubleClick={activateEditMode}>\r\n                    <span>Your status:</span>\r\n                    <span >{props.status}</span>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks","import React from \"react\"\r\n\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () =>  {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () =>  {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.status !== this.props.status) {\r\n        this.setState({\r\n            status: this.props.status})\r\n    }\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            {this.state.editMode === true\r\n                ?\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                :\r\n                <div onDoubleClick={this.activateEditMode}>\r\n                    <p>Your status:</p>\r\n                    <span >{this.props.status || '---------'}</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    }\r\n}\r\nexport default ProfileStatus","import React from \"react\"\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport defaultUsersPhoto from '../../../assets/photos/default_user_image.png'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description_block}>\r\n                <img  src={profile.photos.large === null ? defaultUsersPhoto : profile.photos.large} alt='User photo' className={s.userPhoto}/>\r\n                <h2>Имя: {profile.fullName}</h2>\r\n                <h3>Обо мне: {profile.aboutMe}</h3>\r\n                <div>\r\n                    <h3>В поиске работы: {profile.lookingForAJob === true? 'ДА' : 'Нет'}</h3>\r\n                    <h4>Как так получилось: {profile.lookingForAJobDescription}</h4>\r\n                </div>\r\n                <div>\r\n                    <h3>Contacts:</h3>\r\n                    <ul>\r\n                        {Object.entries(profile.contacts).map(([key,value]) => (\r\n                            !!value && <li key={key}>\r\n                                <h5>{key}: <a href={value}>{value}</a></h5>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <ProfileStatusWithHooks status = {status} updateStatus = {updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__gk+-H\",\"posts\":\"MyPosts_posts__vq8GB\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__J4Byi\"};","import React from \"react\"\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n    return  (\r\n      <div className={s.item}>\r\n        <img src={props.urlphoto}></img>\r\n         {props.message}\r\n         <div>\r\n          {props.LikesAmount}\r\n          <span> Like</span>\r\n         </div>\r\n      </div>\r\n    )\r\n}\r\nexport default Post","import React from \"react\"\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = [...props.postsData]\r\n        .reverse()\r\n        .map( (p,index) =>\r\n            <div key = {index}>\r\n                <Post LikesAmount={p.likesCount} message={p.message} urlphoto={p.url}/>\r\n            </div>);\r\n    const addNewPost = (newPostData) => {\r\n        props.addPost(newPostData.newPostText)\r\n    }\r\n    return  (\r\n    <div className={s.postsBlock}>\r\n        <h3>My Posts</h3>\r\n        <div >\r\n          <AddNewPostFormRedux onSubmit = {addNewPost}/>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n   </div>\r\n    )\r\n})\r\nconst AddNewPostForm = (props) => {\r\n    const maxLength15 = maxLengthCreator(15)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component= {Textarea} name='newPostText' placeholder='Enter your post' validate={[requiredField, maxLength15]}/>\r\n            </div>\r\n            <div><button>Add Post</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddPostForm'})(AddNewPostForm)\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer","import React from \"react\"\r\nimport ProfileInfo from \"./profileinfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myposts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {props.profile} status = {props.status} updateUserStatus = {props.updateUserStatusThunk}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile","import {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\nexport default withRouter","import React from \"react\"\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileDataThunk, getUserStatusThunk, updateUserStatusThunk} from \"../../redux/profile-reducer\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport withRouter from \"../../utils/oldHOC/withRouter\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getProfileDataThunk(userId)\r\n        this.props.getUserStatusThunk(userId)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getProfileDataThunk,getUserStatusThunk,updateUserStatusThunk}),\r\n    withRouter)\r\n(ProfileContainer)","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nconst withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Navigate to='/login'/>\r\n        return <Component {...props}/>\r\n    }\r\n    return  connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\nexport default withAuthRedirect"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","profile","updateUserStatus","className","s","src","photos","large","defaultUsersPhoto","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","entries","contacts","map","key","href","Preloader","urlphoto","message","LikesAmount","MyPosts","postsElements","postsData","reverse","p","index","likesCount","url","AddNewPostFormRedux","onSubmit","newPostData","addPost","newPostText","reduxForm","form","maxLength15","maxLengthCreator","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","connect","state","profilePage","dispatch","addPostActionCreator","updateUserStatusThunk","Component","location","useLocation","navigate","useNavigate","params","useParams","router","ProfileContainer","userId","this","authorizedUserId","getProfileDataThunk","getUserStatusThunk","compose","withAuthRedirect","auth","isAuth","withRouter","mapStateToPropsForRedirect","to"],"sourceRoot":""}